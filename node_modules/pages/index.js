var pagination = require('pagination');

exports.getstart = function(page, rowsperpage) {
    return (page-1) * rowsperpage
}

exports.create = function(c) {
    
    var cnf = {
        totalResult:0,
        current: 1, 
        rowsPerPage: 20,
        prelink: './'
    }
    
    var func = function(p) {
        if(!p) return null;
        var r = {p:p, l:'?page='+p}
        if(c.req && c.req.query) {
            r.l = []
            for(var i in c.req.query) {
                if(i != 'page') r.l.push(i + '=' + c.req.query[i])     
            }
            r.l.push('page=' + p)
            r.l = '?' + r.l.join('&')
        }
        return r
    }
    
    if(c.limit) cnf.rowsPerPage = c.limit
    if(c.start) {
        cnf.current = Math.floor(c.start/c.limit) + 1
    }

    if(c.total) cnf.totalResult = c.total
    var paginator = new pagination.SearchPaginator(cnf);
    var res = paginator.getPaginationData()
  
    if(res.next == 0) res.next = null;
    else res.next = func(res.next)
    
    res.previous = func(res.previous)
        
    if(res.range.indexOf(res.first) != -1) res.first = null
    else res.first = func(res.first)
    
    if(res.range.indexOf(res.last) != -1) res.last = null
    else res.last = func(res.last)
    
    for(var i in res.range) {
        res.range[i] = func(res.range[i])
    }
    
    return res;
  
}