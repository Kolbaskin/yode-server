source iskc
{
    type    		= xmlpipe2
 
	# shell command to invoke xmlpipe stream producer
	# mandatory
	#
	xmlpipe_command		= php -c /etc/php5/apache2/php.ini ./sphinx_indexer.php
 
 
	# perform UTF-8 validation, and filter out incorrect codes
	# avoids XML parser choking on non-UTF-8 documents
	# optional, default is 0
	#
	xmlpipe_fixup_utf8	= 1 
}
 
index iskc
{

    #type = rt

    #rt_field = content

        # Использовать соответствующий source-блок настроек при индексации
        source = iskc
 
        # Путь до файлов индекса
        path = /var/lib/sphinxsearch/data/iskc
 
        # Способ хранения индекса (none, inline, extern)
        # Подробнее http://www.sphinxsearch.com/docs/manual-0.9.8.html#conf-docinfo
        docinfo = extern
 
        # Memory lock (http://www.sphinxsearch.com/docs/manual-0.9.8.html#conf-mlock)
        mlock = 0
 
        # Использование английского и русского стемминга
        morphology = stem_ru,stem_en
 
        # Минимальная длина индексируемого слова
        min_word_len = 3
 
        # Установка используемой кодировки
        charset_type = utf-8
        #charset_type = sbcs
 
        # Таблица символов (http://www.sphinxsearch.com/docs/manual-0.9.8.html#conf-charset-table)
        charset_table = 0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F
        #charset_table = 0..9, A..Z->a..z, _, a..z, U+A8->U+B8, U+B8, U+C0..U+DF->U+E0..U+FF, U+E0..U+FF
    
        # Минимальная длина инфикса (префикс в том числе)
        min_infix_len = 2
 
        # Использовать оператор усечения "*" (http://www.sphinxsearch.com/docs/manual-0.9.8.html#conf-enable-star)
        enable_star = 3

        #wordforms = /var/www/wpier/www/iskc.makeshow.ru/search/sinonims.txt
}

searchd
{

        listen = localhost:3312
        #listen = 9312

        # log file, searchd run info is logged here
        # optional, default is 'searchd.log'
        #log = /var/log/searchd.log

        # query log file, all search queries are logged here
        # optional, default is empty (do not log queries)
        #query_log = /var/log/query.log

        # client read timeout, seconds
        # optional, default is 5
        read_timeout = 5

        # request timeout, seconds
        # optional, default is 5 minutes
        client_timeout = 300

        # maximum amount of children to fork (concurrent searches to run)
        # optional, default is 0 (unlimited)
        #max_children = 30

        # PID file, searchd process ID file name
        # mandatory
        pid_file = /var/log/searchd.pid

        # max amount of matches the daemon ever keeps in RAM, per-index
        # WARNING, THERE'S ALSO PER-QUERY LIMIT, SEE SetLimits() API CALL
        # default is 1000 (just like Google)
        max_matches = 1000

        # seamless rotate, prevents rotate stalls if precaching huge datasets
        # optional, default is 1
        seamless_rotate = 1

        # whether to forcibly preopen all indexes on startup
        # optional, default is 1 (preopen everything)
        preopen_indexes = 1

        # whether to unlink .old index copies on succesful rotation.
        # optional, default is 1 (do unlink)
        unlink_old = 1

        # MVA updates pool size
        # shared between all instances of searchd, disables attr flushes!
        # optional, default size is 1M
        mva_updates_pool = 1M

        # max allowed network packet size
        # limits both query packets from clients, and responses from agents
        # optional, default size is 8M
        max_packet_size = 8M

        # max allowed per-query filter count
        # optional, default is 256
        max_filters = 256

        # max allowed per-filter values count
        # optional, default is 4096
        max_filter_values = 4096


        # max allowed per-batch query count (aka multi-query count)
        # optional, default is 32
        max_batch_queries = 64


        # multi-processing mode (MPM)
        # known values are none, fork, prefork, and threads
        # optional, default is fork
        #
        workers = threads # for RT to work
}